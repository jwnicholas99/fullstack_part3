{"version":3,"sources":["Components/Person.js","Components/Filter.js","Components/Form.js","Components/Notification.js","Services/persons.js","App.js","index.js"],"names":["Person","props","name","number","onClick","deletePerson","Filter","value","filter","onChange","handleChange","Form","onSubmit","addName","newName","handleNameChange","newNum","handleNumChange","type","Notification","message","isError","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNum","setFilter","notifMsg","setNotifMsg","errMsg","setErrMsg","useEffect","personService","initialPersons","personsToShow","person","toLowerCase","includes","event","target","preventDefault","i","length","changedPerson","window","confirm","returnedPerson","map","setTimeout","personObj","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"+JAWeA,EATA,SAACC,GACZ,OACI,gCACKA,EAAMC,KADX,KACmBD,EAAME,OACrB,wBAAQC,QAASH,EAAMI,aAAvB,wBCIGC,EARA,SAACL,GACZ,OACI,2CACY,uBAAOM,MAAON,EAAMO,OAAQC,SAAUR,EAAMS,mBCajDC,EAhBF,SAACV,GACV,OACI,uBAAMW,SAAUX,EAAMY,QAAtB,UACI,yCACU,uBAAON,MAAON,EAAMa,QAASL,SAAUR,EAAMc,sBAEvD,2CACY,uBAAOR,MAAON,EAAMe,OAAQP,SAAUR,EAAMgB,qBAExD,8BACI,wBAAQC,KAAK,SAAb,uBCYDC,EAtBM,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAC5B,GAAgB,OAAZD,EAAkB,OAAO,KAE7B,IAEME,EAAQ,CACVC,MAHUF,EAAU,MAAQ,QAI5BG,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAGlB,OACI,qBAAKP,MAAOA,EAAZ,SACKF,K,gBClBPU,EAAU,eAqBD,EAnBA,WAEX,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB1B,EAdA,SAAAC,GAEX,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY1B,EATA,SAACG,EAAIF,GAEhB,OADYL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO1B,EAJA,SAACG,GACZ,OAAOP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,KC0FvBG,EApGH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQ5B,EAAR,KAAiB+B,EAAjB,KACA,EAA8BH,mBAAS,IAAvC,mBAAQ1B,EAAR,KAAgB8B,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAQlC,EAAR,KAAgBuC,EAAhB,KACA,EAAkCL,mBAAS,MAA3C,mBAAQM,EAAR,KAAkBC,EAAlB,KACA,EAA8BP,mBAAS,MAAvC,mBAAQQ,EAAR,KAAgBC,EAAhB,KAkEAC,qBAAU,WACRC,IAEGpB,MAAK,SAAAqB,GACJV,EAAWU,QAEd,IAEH,IAAMC,EAAgBZ,EAAQnC,QAAO,SAAAgD,GAAM,OAAIA,EAAOtD,KAAKuD,cAAcC,SAASlD,EAAOiD,kBAEzF,OACE,gCACE,2CACA,cAAC,EAAD,CAAcrC,QAAS4B,EAAU3B,SAAS,IAC1C,cAAC,EAAD,CAAcD,QAAS8B,EAAQ7B,SAAS,IACxC,cAAC,EAAD,CAAQd,MAAOC,EAAQE,aAhCA,SAACiD,GAC1BZ,EAAUY,EAAMC,OAAOrD,UAiCrB,kDACA,cAAC,EAAD,CAAMM,QAlFM,SAAC8C,GACfA,EAAME,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAQoB,OAAQD,IAClC,GAAInB,EAAQmB,GAAG5D,OAASY,EAAQ,CAAC,IAAD,aAC9B,IAAM0C,EAASb,EAAQmB,GACjBE,EAAa,2BAAOR,GAAP,IAAerD,OAAOa,IAEzC,OAAKiD,OAAOC,QAAP,UACApD,EADA,2EAILuC,EACUW,EAAc1B,GAAI0B,GACzB/B,MAAK,SAAAkC,GACJvB,EAAWD,EAAQyB,KAAI,SAAAZ,GAAM,OAAIA,EAAOlB,KAAO6B,EAAe7B,GAAKkB,EAASW,MAC5EtB,EAAW,IACXC,EAAU,IAEVG,EAAY,YAAD,OAAae,EAAc9D,KAA3B,wBAA+C8D,EAAc7D,SACxEkE,YAAW,kBAAMpB,EAAY,QAAO,QAElC,CAAN,WAZS,CAAN,UAN2B,qCAsBlC,IAAMqB,EAAY,CAACpE,KAAMY,EAASX,OAAQa,GAE1CqC,EACUiB,GACPrC,MAAK,SAAAkC,GACJvB,EAAWD,EAAQ4B,OAAOJ,IAC1BtB,EAAW,IACXC,EAAU,IAEVG,EAAY,SAAD,OAAUqB,EAAUpE,OAC/BmE,YAAW,kBAAMpB,EAAY,QAAO,SA+CdnC,QAASA,EAASC,iBA3CrB,SAAC4C,GACxBd,EAAWc,EAAMC,OAAOrD,QA0CwDS,OAAQA,EAAQC,gBAvC1E,SAAC0C,GACvBb,EAAUa,EAAMC,OAAOrD,UAwCrB,yCACCgD,EAAca,KAAI,SAACZ,GAAD,OACjB,cAAC,EAAD,CAAwBtD,KAAMsD,EAAOtD,KAAMC,OAAQqD,EAAOrD,OAAQE,aAAc,kBAnChEiC,EAmCmFkB,EAAOlB,GAnCtFpC,EAmC0FsD,EAAOtD,UAlCpH+D,OAAOC,QAAP,iBAAyBhE,EAAzB,QAELmD,EACUf,GACPkC,OAAM,SAAAC,GACLtB,EAAU,GAAD,OAAIjD,EAAJ,6BACTmE,YAAW,kBAAMlB,EAAU,QAAO,QAGtCP,EAAWD,EAAQnC,QAAO,SAAAgD,GAAM,OAAIA,EAAOlB,KAAOA,QAV/B,IAACA,EAAIpC,IAmCPsD,EAAOlB,WCpG5BoC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2ffb3224.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = (props) => {\n    return (\n        <div>\n            {props.name}: {props.number} \n            <button onClick={props.deletePerson}>delete</button>\n        </div>\n    );\n};\n\nexport default Person;","import React from 'react';\n\nconst Filter = (props) => {\n    return (\n        <div>\n            Filter: <input value={props.filter} onChange={props.handleChange} />\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst Form = (props) => {\n    return (\n        <form onSubmit={props.addName}>\n            <div>\n                Name: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>\n                Number: <input value={props.newNum} onChange={props.handleNumChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n      </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Notification = ({message, isError}) => {\n    if (message === null) return null\n    \n    const color = isError ? 'red' : 'green'\n\n    const style = {\n        color: color,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    \n    return (\n        <div style={style}>\n            {message}\n        </div>\n    );\n};\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const req = axios.post(baseUrl, newPerson)\n    return req.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const req = axios.put(`${baseUrl}/${id}`, newPerson)\n    return req.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\n\nimport Person from './Components/Person.js'\nimport Filter from './Components/Filter.js'\nimport Form from './Components/Form.js'\nimport Notification from './Components/Notification.js'\n\nimport personService from './Services/persons.js'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notifMsg, setNotifMsg ] = useState(null)\n  const [ errMsg, setErrMsg ] = useState(null)\n\n  const addName = (event) => {\n    event.preventDefault()\n    for (let i = 0; i < persons.length; i++){\n      if (persons[i].name === newName){\n        const person = persons[i]\n        const changedPerson = {...person, number:newNum}\n\n        if (!window.confirm(\n          `${newName} is already in the phonebook - replace the old number with a new one?`\n        )) return\n        \n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n            setNewName('')\n            setNewNum('')\n            \n            setNotifMsg(`Modified ${changedPerson.name}'s number to ${changedPerson.number}`)\n            setTimeout(() => setNotifMsg(null), 5000)\n          })\n        return\n      }\n    }\n\n    const personObj = {name: newName, number: newNum}\n\n    personService\n      .create(personObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNum('')\n        \n        setNotifMsg(`Added ${personObj.name}`)\n        setTimeout(() => setNotifMsg(null), 5000)\n      })\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const deletePerson = (id, name) => {\n    if (!window.confirm(`Delete ${name}?`)) return\n    \n    personService\n      .remove(id)\n      .catch(error => {\n        setErrMsg(`${name} is not in the phonebook`)\n        setTimeout(() => setErrMsg(null), 5000)\n      })\n    \n    setPersons(persons.filter(person => person.id !== id))\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMsg} isError={false} />\n      <Notification message={errMsg} isError={true} />\n      <Filter value={filter} handleChange={handleFilterChange} />\n\n      <h2>Add a New Number</h2>\n      <Form addName={addName} newName={newName} handleNameChange={handleNameChange} newNum={newNum} handleNumChange={handleNumChange} />\n\n      <h2>Numbers</h2>\n      {personsToShow.map((person) => \n        <Person key={person.id} name={person.name} number={person.number} deletePerson={() => deletePerson(person.id, person.name)} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}